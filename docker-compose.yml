#version: "3.8"

services:
  frontend:
    image: nginxinc/nginx-unprivileged:1.27-alpine
    container_name: frontend
    restart: unless-stopped
    ports:
    - "8081:8080"
    networks:
      - transcendence
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./srcs/scripts:/scripts:ro
      - ./srcs/secrets:/app/secrets:ro

  backend:
      build: ./srcs/backend
      container_name: backend
      restart: unless-stopped
      networks:
        - transcendence
      ports:
        - "3000:3000"
      environment:
        - VAULT_ADDR=https://vault:8200
        - VAULT_SKIP_VERIFY=true
      volumes:
      - ./srcs/secrets:/app/secrets
      - ./srcs/scripts:/scripts:ro

  nginx:    
    image: owasp/modsecurity-crs:nginx
    container_name: nginx-waf
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    cap_add:
      - NET_BIND_SERVICE
    volumes:     
      # Main Nginx configuration
      - ./srcs/conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # ModSecurity configuration directory
      - ./srcs/conf/modsecurity:/etc/modsecurity.d:ro
      # (Optional) Nginx templates directory (not required unless our image uses it)
      - ./srcs/conf/nginx/templates-empty:/etc/nginx/templates:ro
      # (Optional) Nginx entrypoint scripts directory (not required unless our image uses it)
      - ./srcs/conf/nginx/entrypoint-empty:/docker-entrypoint.d:ro
      # ModSecurity main 
      - ./srcs/conf/modsecurity/modsecurity.conf:/etc/modsecurity.d/modsecurity.conf:ro 
      # ModSecurity - CRS Override
      - ./srcs/conf/modsecurity/crs-setup.conf:/etc/modsecurity.d/owasp-crs/crs-setup.conf:ro 
      # ModSecurity - Custom rules
      - ./srcs/conf/modsecurity/custom-rules:/etc/modsecurity.d/custom-rules:ro 
      # Certs - TLS certificates (if you use real HTTPS) 
      #- ./srcs/secrets/certs:/srcs/secrets/certs:ro
      - ./srcs/secrets:/srcs/secrets:ro
      # Logs
      - ./srcs/logs/nginx/error.log:/srcs/logs/nginx/error.log
      - ./srcs/logs/nginx/access.log:/srcs/logs/nginx/access.log
      - ./srcs/logs/modsec:/srcs/logs/modsec
      - ./srcs/scripts:/scripts:ro
    depends_on:
      - frontend
      - backend
    networks:
      - transcendence  
  
  vault:
    image: hashicorp/vault:1.13
    container_name: vault
    restart: unless-stopped
    ports:
        - "8200:8200"
    cap_add:
        - IPC_LOCK
    environment:
        VAULT_ADDR: "http://0.0.0.0:8200"
        VAULT_LOCAL_CONFIG: |-
          {
            "ui": true,
            "disable_mlock": true,
            "listener": [
              { "tcp": { 
                "address": "0.0.0.0:8200",
                "tls_disable": 0,
                "tls_cert_file": "/vault/certs/fullchain.pem",
                "tls_key_file": "/vault/certs/privkey.pem"
              } }
            ],
            "storage": { "file": { "path": "/vault/file" } },
            "log_level": "info"
          }
    volumes:
      # Vault configuration files (vault.hcl, etc.)
      - ./srcs/data/vault/config:/vault/config
      # Vault persistent data storage
      - ./srcs/data/vault/file:/vault/file
      # Certs - TLS certificates for Vault HTTPS
      - ./srcs/secrets/certs:/vault/certs:ro
      - ./srcs/secrets:/app/secrets:ro
      - ./srcs/scripts:/scripts:ro      
    command: ["vault", "server", "-config=/vault/config/vault.hcl"]
    networks:
      - transcendence

networks:
  transcendence:
    driver:  bridge