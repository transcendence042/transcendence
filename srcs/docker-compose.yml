#version: "3.8"

services:
  backend:
    build: ./backend
    container_name: transcendence-backend
    restart: unless-stopped
    networks:
      - transcendence
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - JWT_SECRET=supersecretkey
      # OAuth deshabilitado temporalmente
      - GOOGLE_CLIENT_ID=dummy-id
      - GOOGLE_CLIENT_SECRET=dummy-secret
      - GOOGLE_CALLBACK_URL=http://localhost:3000/auth/google/callback
      # Vault deshabilitado
      # - VAULT_ADDR=https://vault:8200
      # - VAULT_SKIP_VERIFY=true
    volumes:
      # Persistir base de datos SQLite
      - backend_data:/app/data
      # Scripts disponibles (si los necesitas para debug)
      - ./srcs/scripts:/scripts:ro
      # Secrets comentado (no usamos Vault por ahora)
      # - ./srcs/secrets:/app/secrets

  frontend:
    build: ./frontend
    container_name: transcendence-frontend
    restart: unless-stopped
    ports:
      - "2323:80"  # Acceso directo al frontend
    networks:
      - transcendence
    depends_on:
      - backend  # ← ESPERA a que backend termine de levantarse
    # volumes:
    #   - ./srcs/frontend:/usr/share/nginx/html:ro  # No necesario con build
    #   - ./srcs/scripts:/scripts:ro
    #   - ./srcs/secrets:/app/secrets:ro

  # === SERVICIOS COMENTADOS PARA MÁS ADELANTE ===
  # nginx:    
  #   image: owasp/modsecurity-crs:nginx
  #   container_name: nginx-waf
  #   restart: unless-stopped
  #   ports:
  #     - "8080:80"
  #     - "8443:443"
  #   cap_add:
  #     - NET_BIND_SERVICE
  #   volumes:     
  #     # Main Nginx configuration
  #     - ./srcs/conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     # ModSecurity configuration directory
  #     - ./srcs/conf/modsecurity:/etc/modsecurity.d:ro
  #     # (Optional) Nginx templates directory
  #     - ./srcs/conf/nginx/templates-empty:/etc/nginx/templates:ro
  #     # (Optional) Nginx entrypoint scripts directory
  #     - ./srcs/conf/nginx/entrypoint-empty:/docker-entrypoint.d:ro
  #     # ModSecurity main 
  #     - ./srcs/conf/modsecurity/modsecurity.conf:/etc/modsecurity.d/modsecurity.conf:ro 
  #     # ModSecurity - CRS Override
  #     - ./srcs/conf/modsecurity/crs-setup.conf:/etc/modsecurity.d/owasp-crs/crs-setup.conf:ro 
  #     # ModSecurity - Custom rules
  #     - ./srcs/conf/modsecurity/custom-rules:/etc/modsecurity.d/custom-rules:ro 
  #     # Certs - TLS certificates
  #     - ./srcs/secrets:/srcs/secrets:ro
  #     # Logs
  #     - ./srcs/logs/nginx/error.log:/srcs/logs/nginx/error.log
  #     - ./srcs/logs/nginx/access.log:/srcs/logs/nginx/access.log
  #     - ./srcs/logs/modsec:/srcs/logs/modsec
  #     - ./srcs/scripts:/scripts:ro
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - transcendence  
  
  # vault:
  #   image: hashicorp/vault:1.13
  #   container_name: vault
  #   restart: unless-stopped
  #   ports:
  #       - "8200:8200"
  #   cap_add:
  #       - IPC_LOCK
  #   environment:
  #       VAULT_ADDR: "http://0.0.0.0:8200"
  #       VAULT_LOCAL_CONFIG: |-
  #         {
  #           "ui": true,
  #           "disable_mlock": true,
  #           "listener": [
  #             { "tcp": { 
  #               "address": "0.0.0.0:8200",
  #               "tls_disable": 0,
  #               "tls_cert_file": "/vault/certs/fullchain.pem",
  #               "tls_key_file": "/vault/certs/privkey.pem"
  #             } }
  #           ],
  #           "storage": { "file": { "path": "/vault/file" } },
  #           "log_level": "info"
  #         }
  #   volumes:
  #     # Vault configuration files (vault.hcl, etc.)
  #     - ./srcs/data/vault/config:/vault/config
  #     # Vault persistent data storage
  #     - ./srcs/data/vault/file:/vault/file
  #     # Certs - TLS certificates for Vault HTTPS
  #     - ./srcs/secrets/certs:/vault/certs:ro
  #     - ./srcs/secrets:/app/secrets:ro
  #     - ./srcs/scripts:/scripts:ro      
  #   command: ["vault", "server", "-config=/vault/config/vault.hcl"]
  #   networks:
  #     - transcendence

volumes:
  backend_data:

networks:
  transcendence:
    driver: bridge