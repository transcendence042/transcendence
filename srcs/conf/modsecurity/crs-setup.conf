# -----------------------------------------------------------------------------
# OWASP CRS setup overrides (lightweight tuning starting point)
# -----------------------------------------------------------------------------

# CRS version
SecAction "id:910001,phase:1, nolog, pass, t:none, setvar:tx.crs_setup_version=3.3.7"

# Paranoia Level:
# 1 = safe defaults, 2/3/4 = more strict (more FPs to tune)
SecAction "id:910010,phase:1, nolog, pass, t:none, setvar:tx.paranoia_level=1, setvar:tx.executing_paranoia_level=1"

# Treat static assets in DetectionOnly mode
SecAction "id:910020,phase:1, nolog, pass, t:none, setvar:tx.static_assets_detectiononly=1"

# Inbound / Outbound Anomaly thresholds:
# Block when score >= threshold. Lower = stricter (more blocking).
SecAction "id:910030,phase:1, nolog, pass, t:none, setvar:tx.inbound_anomaly_score_threshold=5, setvar:tx.outbound_anomaly_score_threshold=4"

# Health checks and CORS preflights
SecAction "id:910040,phase:1, nolog, pass, t:none, setvar:tx.allow_static_path=/static/"
SecAction "id:910041,phase:1, nolog, pass, t:none, setvar:tx.allow_healthz=1"
SecAction "id:910042,phase:1, nolog, pass, t:none, setvar:tx.allow_ping=1"
SecAction "id:910043,phase:1, nolog, pass, t:none, setvar:tx.allow_cors_preflight=1"

# Enforce JSON and XML processors (ModSec body parsers already enabled in modsecurity.conf)
SecAction "id:910050,phase:1, nolog, pass, t:none, setvar:tx.crs_exclusions_json=1, setvar:tx.crs_exclusions_xml=1"

# Enforce API Content-Type rules (related to custom rule 900120)
SecAction "id:910120,phase:1, nolog, pass, t:none, setvar:tx.api_enforce_content_type=1"
SecAction "id:910121,phase:1, nolog, pass, t:none, setvar:tx.api_upload_allow_multipart=1"

# Allowed content types (keep in sync with POST rule)
SecAction "id:910130,phase:1, nolog, pass, t:none, setvar:'tx.allowed_request_content_type=|application/x-www-form-urlencoded|multipart/form-data|application/json|text/xml|application/xml|'"

# File extensions and request limits (tune to your app)
SecAction "id:910140,phase:1, nolog, pass, t:none, setvar:tx.max_num_args=256, setvar:tx.arg_name_length=50, setvar:tx.arg_length=64000, setvar:tx.total_arg_length=64000, setvar:tx.max_file_size=12000000, setvar:tx.combined_file_sizes=12000000"

# Toggle to disable ModSecurity processing for CORS preflight requests (OPTIONS with Origin header).
# Set to 1 to disable ModSecurity for CORS preflight, 0 to keep ModSecurity active.
# Related custom rule: 900150
SecAction "id:910150,phase:1,pass,nolog,setvar:tx.cors_preflight_disable=1"

# Required Accept header value for API requests (related to custom rules 900200/900201)
SecAction "id:910200,phase:1,pass,nolog,setvar:tx.api_accept=application/json"

# Allowed methods for root path (related to 900211)
SecAction "id:910211,phase:1,pass,nolog,setvar:'tx.allowed_methods_root=GET HEAD'"

# Allowed methods for /api/ by default (related to 900212)
SecAction "id:910212,phase:1,pass,nolog,setvar:'tx.allowed_methods_api=GET HEAD POST'"

# Allowed methods for /api/profiles (related to 900214)
SecAction "id:910214,phase:1,pass,nolog,setvar:'tx.allowed_methods_profiles=GET HEAD POST PUT DELETE'"

# Allowed methods for /api/items (related to 900216)
SecAction "id:910216,phase:1,pass,nolog,setvar:'tx.allowed_methods_items=GET HEAD POST PUT DELETE'"

# Allowed Content-Types for API responses (related to custom rule 900221)
SecAction "id:910221,phase:1,pass,nolog,setvar:tx.api_response_content_types=application/json|application/problem+json"

# Size limits for incoming requests (related to custom rules 900231–900233)
SecAction "id:910231,phase:1,pass,nolog,setvar:tx.max_num_args=256"
SecAction "id:910232,phase:1,pass,nolog,setvar:tx.arg_name_length=50"
SecAction "id:910233,phase:1,pass,nolog,setvar:tx.arg_length=64000"

# Allowed methods for specific endpoints (related to custom rules 900241–900243)
SecAction "id:910241,phase:1,pass,nolog,setvar:'tx.allowed_methods_auth_login=POST'"
SecAction "id:910242,phase:1,pass,nolog,setvar:'tx.allowed_methods_upload=POST'"
SecAction "id:910243,phase:1,pass,nolog,setvar:'tx.allowed_methods_non_api=GET|HEAD|OPTIONS'"

# Upload guard settings (related to custom rules 900302–900303)
SecAction "id:910302,phase:1,pass,nolog,setvar:tx.upload_content_type=multipart/form-data"
SecAction "id:910303,phase:1,pass,nolog,setvar:tx.upload_max_size=8000000"

# Dangerous file extensions to block in /api/ (related to custom rule 900400)
SecAction "id:910400,phase:1,pass,nolog,setvar:'tx.blocked_extensions=php|jsp|asp|aspx|exe|sh|bat|cmd'"

# Login rate limiting switches (related to custom rules 900401+)
SecAction "id:910451,phase:1, nolog, pass, t:none, setvar:tx.login_ratelimit_enabled=1"
SecAction "id:910452,phase:1, nolog, pass, t:none, setvar:tx.login_ratelimit_window=60"
SecAction "id:910453,phase:1, nolog, pass, t:none, setvar:tx.login_ratelimit_maxreq=10"
SecAction "id:910454,phase:1, nolog, pass, t:none, setvar:tx.login_fail_tracking=1"

# Allowed hostnames for Host header validation
SecAction "id:910600,phase:1, nolog, pass, t:none, setvar:'tx.allowed_hostnames=localhost|frontend|api'"

# Patterns for XSS and SQLi detection (related to custom rules 900601–900603)
# XSS pattern (detect <script>, onerror=, onload=, alert( etc.)
SecAction "id:910601,phase:1,pass,nolog,setvar:'tx.xss_pattern=<script|onerror|onload|alert('"
# SQLi word-list pattern (OR/AND/UNION/LIKE...)
SecAction "id:910602,phase:1,pass,nolog,t:none, setvar:'tx.sqli_pattern=\\b(?:or|and|union|select|insert|update|delete|drop|sleep|benchmark|like)\\b'"
# SQLi quote pattern (detect ' OR ' / " OR " etc.)
SecAction "id:910603,phase:1,pass,nolog,t:none, setvar:tx.sqli_quote_pattern=(?:'|\\\')\\s*(?:or|and)\\s*(?:'|\\\')"


# Allowed POST content-types (used by strict POST CT rule)
SecAction "id:910700,phase:1, nolog, pass, t:none, setvar:'tx.allowed_post_ct=application/x-www-form-urlencoded|multipart/form-data|application/json'"

# Allowed methods and Content-Types for /api/auth/login (related to custom rules 900701–900702)
SecAction "id:910701,phase:1,pass,nolog,setvar:'tx.auth_login_methods=GET|POST'"
SecAction "id:910702,phase:1,pass,nolog,setvar:'tx.auth_login_content_types=application/json|multipart/form-data'"

# Toggle to enforce User-Agent header presence (related to custom rule 900800)
SecAction "id:910800,phase:1,pass,nolog,setvar:tx.ua_required=1"

# RFC1918/localhost/metadata IPs (used by the SSRF rule below)
SecAction "id:910801,phase:1,pass,nolog,t:none, setvar:'tx.private_ip_regex1=127\.0\.0\.1|0\.0\.0\.0'"
SecAction "id:910802,phase:1,pass,nolog,t:none, setvar:'tx.private_ip_regex2=10\\.[0-9](?:[0-9])?(?:[0-9])?\\.[0-9](?:[0-9])?(?:[0-9])?\\.[0-9](?:[0-9])?(?:[0-9])?'"
SecAction "id:910803,phase:1,pass,nolog,t:none, setvar:'tx.private_ip_regex3=192\\.168\\.[0-9](?:[0-9])?(?:[0-9])?\\.[0-9](?:[0-9])?(?:[0-9])?'"
SecAction "id:910804,phase:1,pass,nolog,t:none, setvar:'tx.private_ip_regex4=172\\.(?:1[6-9]|2[0-9]|3[0-1])\\.[0-9](?:[0-9])?(?:[0-9])?\\.[0-9](?:[0-9])?(?:[0-9])?'"
SecAction "id:910805,phase:1,pass,nolog,t:none, setvar:'tx.private_ip_regex5=169\.254\.169\.254'"
# Combine all private IP regexes into one (used by the SSRF rule below)
SecAction "id:910809,phase:1,pass,nolog,t:none,setvar:'tx.private_ip_regex=%{tx.private_ip_regex1}|%{tx.private_ip_regex2}|%{tx.private_ip_regex3}|%{tx.private_ip_regex4}|%{tx.private_ip_regex5}'"

# Suspicious URL schemes often used for SSRF/LFI gadgets
SecAction "id:910810,phase:1, nolog, pass, t:none, setvar:'tx.bad_schemes=file|gopher|dict|smb|jar|php|expect|data'"

# LFI target paths (quick wins)
SecAction "id:910820,phase:1, nolog, pass, t:none, setvar:'tx.lfi_paths=(?:^|/)(?:etc/passwd|shadow|hosts)(?:$|[^a-z])'"

# Canary flag to confirm ModSecurity is active (related to custom rule 999900)
SecAction "id:919900,phase:1, nolog, pass, t:none, setvar:tx.demo_block_keyword=malicious"
